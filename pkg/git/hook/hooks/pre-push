#!/bin/sh
set -eu

# root path of the repositories holding configuration
# if there is no parent config,
# both variables have the same value
PARENT_REPOSITORY_ROOT="$(dirname $(githook-companion config directory))"
CHILD_REPOSITORY_ROOT="$(pwd)"
# binary dependecy directories
# if there is no parent config,
# both variables have the same value
PARENT_BIN_DIRECTORY="$(githook-companion config dependency path)"
CHILD_BIN_DIRECTORY="$(githook-companion config dependency path --child)"
# githooks directory
CHILD_GITHOOKS_DIRECTORY="$(githook-companion config hook path --child)"
CHILD_CONFIG_DIRECTORY="$(githook-companion config directory --child)"

echo "apply parent pre-push"

#************************************
#   START OF YOUR HOOK LOGIC BLOCK
#+++

# don't add any commits here : push lists the commits it will
# send to the server even before the "pre-push" hook
# any new commit will be ignored

#+++
#   END OF YOUR HOOK LOGIC BLOCK
#************************************


# apply child git-hooks
if [ -d "$CHILD_GITHOOKS_DIRECTORY" ] && [ -f "$CHILD_GITHOOKS_DIRECTORY/pre-push" ] && [ "$PARENT_REPOSITORY_ROOT" != "$CHILD_REPOSITORY_ROOT" ]
then
  echo "apply child pre-push"
  "$CUSTOM_GITHOOKS_DIRECTORY"/pre-push
fi


# make sure a clean state is being pushed
if [ -z "$(git status --porcelain)" ]; then
  # Working directory clean
  echo "clean state: proceed with push"
else
  # Uncommitted changes
  echo "you have uncommited changes: stopping the push"
  git status
  exit 1
fi
